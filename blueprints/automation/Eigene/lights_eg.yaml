blueprint:
  name: Bewegung EG - Licht-Szenen
  description: Licht-Szenen einschalten, basierend auf dem Zustand des EG
  domain: automation
  input:
    motion_sensor:
      name: Bewegungsmelder
      description: Dieser Bewegungsmelder wird f√ºr die Automatisierung genutzt
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    scene_on:
      name: Lichtszene An
      description: Diese Lichtszene wird verwendet, wenn das Licht eingeschaltet sein soll
      selector:
        entity:
          domain: scene
    scene_tvon:
      name: Lichtszene TV (an)
      description: Diese Lichtszene wird verwendet, wenn das Licht an sein soll, aber der TV an ist
      selector:
        entity:
          domain: scene
    scene_tvoff:
      name: Lichtszene TV (aus)
      description: Diese Lichtszene wird verwendet, wenn das Licht aus sein soll, aber der TV an ist
      selector:
        entity:
          domain: scene
    scene_off:
      name: Lichtszene Aus
      description: Diese Lichtszene wird verwendet, wenn das Licht ausgeschaltet sein soll
      selector:
        entity:
          domain: scene
    harmony_hub:
      name: Harmony Hub
      description: Der zu verwendende Harmony Hub
      selector:
        entity:
          domain: remote
    light_sensor:
      name: Lichtsensor
      description: Der zu verwendende Lichtsensor
      selector:
        entity:
          domain: sensor
    light_threshold:
      name: Licht-Schwelle
      description: Unterhalb von diesem Wert wird das Licht eingeschaltet
      default: 100
      selector:
        number:
          min: 0
          max: 255

trigger:
  - platform: time
    at: "06:00:00"
  - platform: time
    at: "20:15:00"
  - platform: time
    at: "22:00:00"
  - platform: state
    entity_id:
      - !input harmony_hub
    to: "on"
  - platform: state
    entity_id:
      - !input harmony_hub
    to: "off"
  - platform: state
    entity_id:
      - !input motion_sensor
    to: "on"
  - platform: state
    entity_id:
      - !input motion_sensor
    to: "off"
    for:
      hours: 0
      minutes: 5
      seconds: 0

action:
  - choose:
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: !input motion_sensor
                state: "on"
              - condition: state
                entity_id: !input harmony_hub
                state: "off"
              - condition: time
                after: "06:00:00"
                before: "22:00:00"
              - condition: numeric_state
                entity_id: !input light_sensor
                below: !input light_threshold
        sequence:
          - service: scene.turn_on
            data: {}
            target:
              entity_id: !input scene_on
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: !input harmony_hub
                state: "on"
              - condition: state
                entity_id: !input motion_sensor
                state: "on"
              - condition: time
                after: "20:15:00"
              - condition: numeric_state
                entity_id: !input light_sensor
                below: !input light_threshold
        sequence:
          - service: scene.turn_on
            data: {}
            target:
              entity_id: !input scene_tvon
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: !input harmony_hub
                state: "on"
              - condition: state
                entity_id: !input motion_sensor
                state: "off"
              - condition: time
                after: "20:15:00"
              - condition: numeric_state
                entity_id: !input light_sensor
                below: !input light_threshold
        sequence:
          - service: scene.turn_on
            data: {}
            target:
              entity_id: !input scene_tvoff
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: !input motion_sensor
                state: "on"
              - condition: time
                after: "22:00:00"
                before: "06:00:00"
              - condition: numeric_state
                entity_id: !input light_sensor
                below: !input light_threshold
        sequence:
          - service: scene.turn_on
            data: {}
            target:
              entity_id:
                - !input scene_tvoff
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: !input motion_sensor
                state: "off"
        sequence:
          - service: scene.turn_on
            data: {}
            target:
              entity_id: !input scene_off
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: !input motion_sensor
                state: "on"
              - condition: numeric_state
                entity_id: !input light_sensor
                below: !input light_threshold
        sequence:
          - service: scene.turn_on
            data: {}
            target:
              entity_id: !input scene_on
mode: single
